%
% Family
%
% Datalog Formulation

% Optionally declare types
:-type(father(father:string,child:string)).
father(tom,amy).
father(jack,fred).
father(tony,carolII).
father(fred,carolIII).
father(johnny,jack).

% Optionally declare types
:-type(mother(mother:string,child:string)).
mother(grace,amy).
mother(amy,fred).
mother(carolI,carolII).
mother(carolII,carolIII).
mother(hilda,jack).

parent(X,Y) :- 
  father(X,Y)
  ; 
  mother(X,Y).
% The above clause for parent is equivalent to:  
% parent(X,Y) :- 
%   father(X,Y).
% parent(X,Y) :- 
%   mother(X,Y).

ancestor(X,Y) :- 
  parent(X,Y).
ancestor(X,Y) :- 
  parent(X,Z), 
  ancestor(Z,Y).
  
forefather(X,Y) :-
  father(Y,X).
forefather(X,Y) :-
  forefather(Z,Y),
  father(Z,X).
  
foremother(X,Y) :-
  mother(Y,X).
foremother(X,Y) :-
  foremother(Z,Y),
  mother(Z,X).
  
child(X,Y,Z) :- father(Y,X), mother(Z,X).
